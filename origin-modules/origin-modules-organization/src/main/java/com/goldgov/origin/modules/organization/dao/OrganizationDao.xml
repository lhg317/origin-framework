<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goldgov.origin.modules.organization.dao.OrganizationDao">

	<resultMap
		type="com.goldgov.origin.modules.organization.service.Organization"
		id="organization">
		<id column="ORG_ID" jdbcType="VARCHAR" property="orgID" />
		<result column="ORG_NAME" jdbcType="VARCHAR" property="orgName" />
		<result column="ORG_CODE" jdbcType="VARCHAR" property="orgCode" />
		<result column="ABBREVIATION" jdbcType="VARCHAR" property="abbreviation" />
		<result column="NODE_PATH" jdbcType="VARCHAR" property="nodePath" />
		<result column="NODE_VALUE" jdbcType="INTEGER" property="nodeValue" />
		<result column="PARENT_ID" jdbcType="VARCHAR" property="organization.orgID" />
	</resultMap>

	<resultMap
		type="com.goldgov.origin.modules.organization.service.OrganizationPost"
		id="organizationPost">
		<result column="ORG_POST_ID" jdbcType="VARCHAR" property="orgPostID" />
		<result column="ORG_ID" jdbcType="VARCHAR" property="organization.orgID" />
		<result column="POST_CODE" jdbcType="VARCHAR" property="postCode" />
		<result column="POST_NAME" jdbcType="VARCHAR" property="postName" />
	</resultMap>

	<insert id="addOrganization">
		<selectKey keyProperty="orgID" resultType="String" order="BEFORE">
			select uuid() from dual
		</selectKey>
		insert into Organization (
		ORG_ID,
		ORG_NAME,
		ORG_CODE,
		ABBREVIATION,
		NODE_PATH,
		NODE_VALUE,
		PARENT_ID
		) values (
		#{orgID},
		#{orgName},
		#{orgCode},
		#{abbreviation},
		#{nodePath},
		#{nodeValue},
		#{parentOrganization.orgID}
		)
	</insert>

	<delete id="deleteOrganization">
		DELETE FROM ORGANIZATION WHERE ORG_ID IN
		<foreach item="id" index="index" collection="ids" open="("
			separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<update id="updateOrganization">
		update Organization
		<set>
			<if test="orgName != null and orgName != ''">ORG_NAME = #{orgName},</if>
			<if test="orgCode != null and orgCode != ''">ORG_CODE = #{orgCode},</if>
			<if test="abbreviation != null and abbreviation != ''">ABBREVIATION = #{abbreviation},</if>
			<if test="nodePath != null and nodePath != ''">NODE_PATH = #{nodePath},</if>
			<if test="nodeValue != null">NODE_VALUE = #{nodeValue},</if>
		</set>
		 WHERE ORG_ID = #{orgID}
	</update>

	<select id="listOrganization" resultMap="organization">
		SELECT
		ORG_ID,
		ORG_NAME,
		ORG_CODE,
		ABBREVIATION,
		NODE_PATH,
		NODE_VALUE
		FROM ORGANIZATION
		<where>
			<if test="query.searchParentID != null and query.searchParentID != ''">ORG_ID != PARENT_ID AND PARENT_ID = #{query.searchParentID}</if>
			<if test="query.searchParentID == null or query.searchParentID == ''">ORG_ID = PARENT_ID</if>
		</where>
	</select>
	
	<select id="listOrganizationByUser" resultMap="organization">
		SELECT
		o.ORG_ID,
		o.ORG_NAME,
		o.ORG_CODE,
		o.ABBREVIATION,
		o.NODE_PATH,
		o.NODE_VALUE
		FROM ORGANIZATION o,ORGANIZATION_USER ou WHERE o.ORG_ID=ou.ORG_ID AND ou.ORG_USER=#{user}
	</select>
	

	<select id="getOrganization" resultMap="organization">
		select
		ORG_ID,
		ORG_NAME,
		ORG_CODE,
		ABBREVIATION,
		NODE_PATH,
		NODE_VALUE
		from Organization
		where
		ORG_ID = #{id}
	</select>

	<select id="getMaxNodeValue" resultType="Integer">
		SELECT max(NODE_VALUE)
		FROM ORGANIZATION
	</select>

	<select id="getNodePath" resultType="String">
		SELECT NODE_PATH FROM
		ORGANIZATION WHERE ORG_ID = #{orgID}
	</select>

	<insert id="addOrgUser">
		INSERT INTO ORGANIZATION_USER (ORG_USER_ID,ORG_ID,ORG_USER) VALUES
		<foreach item="uid" index="index" collection="users"
			separator=",">
			(uuid(),#{orgID},#{uid})
		</foreach>
	</insert>

	<delete id="deleteOrgUser">
		DELETE FROM ORGANIZATION_USER WHERE ORG_USER_ID IN
		<foreach item="id" index="index" collection="orgUserID" open="("
			separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<delete id="deleteOrgUserByUser">
		DELETE FROM ORGANIZATION_USER WHERE ORG_ID=#{orgID} AND ORG_USER IN
		<foreach item="user" index="index" collection="users" open="("
			separator="," close=")">
			#{user}
		</foreach>
	</delete>
	
	<insert id="addOrganizationPost">
		<selectKey keyProperty="orgPostID" resultType="String"
			order="BEFORE">
			select uuid() from dual
		</selectKey>
		INSERT INTO ORGANIZATION_POST (POST_ID,POST_NAME,POST_CODE,ORG_ID)
		VALUES
		(#{orgPostID},#{postName},#{postCode},#{organization.orgID})
	</insert>

	<delete id="deleteOrganizationPost">
		DELETE FROM ORGANIZATION_POST WHERE POST_ID IN
		<foreach item="id" index="index" collection="ids" open="("
			separator="," close=")">
			#{id}
		</foreach>
	</delete>

 	<update id="updateOrganizationPost">
		update ORGANIZATION_POST
		<set>
			<if test="postCode != null and postCode !=''">POST_CODE = #{postCode},</if>
			<if test="postName != null and postName !=''">POST_NAME = #{postName},</if>
		</set>
		where POST_ID = #{orgPostID}
	</update>

	<select id="listOrganizationPost" resultMap="organizationPost">
		SELECT ORG_POST_ID,ORG_ID,POST_CODE,POST_NAME
		FROM ORGANIZATION_POST WHERE ORG_ID = #{orgID}
	</select>
	
	<select id="getOrganizationPost" resultMap="organizationPost">
		SELECT ORG_POST_ID,ORG_ID,POST_CODE,POST_NAME
		FROM ORGANIZATION_POST WHERE ORG_POST_ID = #{id}
	</select>
	
	<insert id="addPostUser">
		INSERT INTO POST_USER (POST_USER_ID,POST_ID,ORG_USER_ID)
		VALUES
		<foreach item="uid" index="index" collection="users"
			separator=",">
			(uuid(),#{postID},#{uid})
		</foreach>
	</insert>
	
	<delete id="deletePostUser">
		DELETE FROM POST_USER WHERE POST_USER_ID IN
		<foreach item="id" index="index" collection="postUserID" open="("
			separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	<delete id="deletePostUserByUser">
		DELETE FROM POST_USER WHERE POST_ID=#{postID} AND ORG_USER_ID IN
		<foreach item="id" index="index" collection="users" open="("
			separator="," close=")">
			#{id}
		</foreach>
	</delete>
</mapper>
